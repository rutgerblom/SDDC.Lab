##
##    Project: SDDC.Lab
##    Authors: Luis Chanu & Rutger Blom
##   Filename: tests/configureRTEP.yml
##
---
- hosts: localhost
  name: configureRTEP.yml
  vars:
      LOCAL_ConfigRTEPTemplate: "./configureRTEP_template.j2"
  tasks:
    - name: configureRTEP_Playbook
      ansible.builtin.debug:
        msg: "Starting playbook: {{ ansible_play_name }}"

    - name: DEBUG -- Display Target Variables (Pause)
      ansible.builtin.pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ================================ Display Variables For Pod {{ '%03d'|format(Pod.Number|int) }} ==================================

                                            Ansible Playbook: {{ ansible_play_name }}

                                           Target.Deployment: {{ Target.Deployment }}

                     Nested_NSXT.Component.LocalManager.FQDN: {{ Nested_NSXT.Component.LocalManager.FQDN }}

          Nested_NSXT.System.Fabric.Nodes.EdgeTransportNodes: {{ Nested_NSXT.System.Fabric.Nodes.EdgeTransportNodes }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true


##
## Obtain Global Manager Unique ID for our Site
##
    - name: Obtain information about our Site
      ansible.builtin.uri:
        url: https://{{ Nested_NSXT.Component.GlobalManager_VIP.FQDN }}/global-manager/api/v1/global-infra/sites/{{ SiteCode }}
        validate_certs: "{{ Common.PKI.ValidateCerts }}"
        timeout: 5
        force_basic_auth: yes
        url_username: "{{ Nested_NSXT.Credential.admin.Name }}"
        url_password: "{{ Nested_NSXT.Credential.admin.Password }}"
        method: GET
        body_format: json
        return_content: yes
        status_code: 200
      register: result
      until: result.status == 200
      retries: 10
      delay: 5
      when:
        - Deploy.Product.NSXT.Federation.Enable == true
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true

    - name: Store the Unique ID of our Site for later use
      ansible.builtin.set_fact:
        site_id: "{{ result.json.unique_id }}"
      when:
        - Deploy.Product.NSXT.Federation.Enable == true
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true
        - result.status == 200



##
## Obtain Pool Object ID for the RTEP Pool
##
    - name: Obtain list of IP Pools
      ansible.builtin.uri:
        url: https://{{ Nested_NSXT.Component.LocalManager_VIP.FQDN }}/api/v1/pools/ip-pools
        validate_certs: "{{ Common.PKI.ValidateCerts }}"
        timeout: 15
        force_basic_auth: yes
        url_username: "{{ Nested_NSXT.Credential.admin.Name }}"
        url_password: "{{ Nested_NSXT.Credential.admin.Password }}"
        method: GET
        body_format: json
        return_content: yes
        status_code: 200
      register: result
      until: result.status == 200
      when: 
        - Deploy.Product.NSXT.Federation.Enable == true
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true

    - name: DEBUG -- Display IP Pools result.json.results
      ansible.builtin.pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          =========================== Display 'result.json.results' Variable ==============================

          Quantity: {{ result.json.results | length }}

          result.json.results:
            {{ result.json.results | to_nice_yaml(indent=2, width=99999) | indent(2) }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true
        - Deploy.Product.NSXT.Federation.Enable == true
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true

    - name: Locate and store information about the RTEP Pool
      ansible.builtin.set_fact:
        rtep_pool_id: "{{ result.json | community.general.json_query(query) }}"
      vars:
        query: results[?display_name=='{{ SiteCode }}-RTEP-Pool']|[0].id
      when:
        - Deploy.Product.NSXT.Federation.Enable == true
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true
        - result.status == 200

    - name: DEBUG -- Display RTEP Pool ID
      ansible.builtin.pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ============================== Display 'rtep_pool_id' Variable ==================================

          rtep_pool_id: {{ rtep_pool_id }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true
        - Deploy.Product.NSXT.Federation.Enable == true
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true


##
## Obtain configuration details on all NSX-T Edge Nodes
##
    - name: Obtain list of Edge Nodes from the Local Manager
      ansible.builtin.uri:
        url: https://{{ Nested_NSXT.Component.LocalManager_VIP.FQDN }}/api/v1/transport-nodes?node_types=EdgeNode
        validate_certs: "{{ Common.PKI.ValidateCerts }}"
        timeout: 15
        force_basic_auth: yes
        url_username: "{{ Nested_NSXT.Credential.admin.Name }}"
        url_password: "{{ Nested_NSXT.Credential.admin.Password }}"
        method: GET
        body_format: json
        return_content: yes
        status_code: 200
      register: result
      until: result.status == 200
      when: 
        - Deploy.Product.NSXT.Federation.Enable == true
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true

    - name: DEBUG -- Display EdgeVM result
      ansible.builtin.pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          =============================== Display EdgeVM result Variable ==================================

          Quantity: {{ result | length }}

          result:
            {{ result | to_nice_yaml(indent=2, width=99999) | indent(2) }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true
        - Deploy.Product.NSXT.Federation.Enable == true
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true

    - name: Create list of Edge Nodes with additional RTEP configuration
      ansible.builtin.set_fact:
        EdgeNodes: "{{ EdgeNodes | default([]) + [ item | combine(RemoteTunnel) ] }}"
      vars:
        RemoteTunnel: |
          {
            "remote_tunnel_endpoint": {
              "host_switch_name": "NVDS-1",
              "rtep_vlan": {{ Net.RTEP.VLAN }},
              "ip_assignment_spec": {
                "resource_type": "StaticIpPoolSpec",
                "ip_pool_id": "{{ rtep_pool_id }}"
              }
            }
          }
      loop: "{{ result.json.results }}"
      when:
        - Deploy.Product.NSXT.Federation.Enable == true
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true

    - name: DEBUG -- Display merged Edge Nodes with TunnelEndpoint result
      ansible.builtin.pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          =============================== Display EdgeNodes Variable ==================================

          Quantity: {{ EdgeNodes | length }}

          EdgeNodes:
            {{ EdgeNodes | to_nice_yaml(indent=2, width=99999) | indent(2) }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true
        - Deploy.Product.NSXT.Federation.Enable == true
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true

    - name: Configure RTEP on Edge Nodes via Global Manager
      ansible.builtin.uri:
        url: https://{{ Nested_NSXT.Component.GlobalManager_VIP.FQDN }}/remote/{{ site_id }}/api/v1/transport-nodes/{{ item.node_id }}
        validate_certs: "{{ Common.PKI.ValidateCerts }}"
        timeout: 15
        force_basic_auth: yes
        url_username: "{{ Nested_NSXT.Credential.admin.Name }}"
        url_password: "{{ Nested_NSXT.Credential.admin.Password }}"
        method: PUT
        body_format: json
        body: "{{ item }}"
        return_content: yes
        status_code: 200
      register: result
      until: result.status == 200
      loop: "{{ EdgeNodes }}"
      when: 
        - Deploy.Product.NSXT.Federation.Enable == true
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true

    - name: Pause for 60 minutes
      ansible.builtin.pause:
        minutes: 60




########################## STOPPED HERE #############################






# PUT
# 	https://pod-020-nsxt-gm.sddc.lab/remote/fe145470-fb41-4ca9-bef9-1f856e2167df/api/v1/transport-nodes/b83f41e1-3e53-4994-b6a7-283d16a4fdd6


##
## Generate Data Structure for API call
##
    - name: Read the structure from template into a variable
      ansible.builtin.set_fact:
        var_EdgeTransportNodes: "{{ lookup('template', LOCAL_ConfigRTEPTemplate) | from_yaml }}"
      when:
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true

    - name: DEBUG -- Display Target Variables
      ansible.builtin.pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ============================ Display var_EdgeTransportNodes Variable ============================

          Quantity: {{ var_EdgeTransportNodes | length }}

          var_EdgeTransportNodes:
            {{ var_EdgeTransportNodes | to_nice_yaml(indent=2, width=99999) | indent(2) }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true
        - var_EdgeTransportNodes != ""


##
## Provision Transport Nodes
##
    - name: Configure RTEP on Edge Transport Nodes
      vmware.ansible_for_nsxt.nsxt_transport_nodes:
        hostname: "{{ Nested_NSXT.Component.LocalManager_VIP.FQDN }}"
        username: "{{ Nested_NSXT.Credential.admin.Name }}"
        password: "{{ Nested_NSXT.Credential.admin.Password }}"
        validate_certs: "{{ Common.PKI.ValidateCerts }}"
        display_name: "{{ item.display_name }}"
#        description: "{{ item.description }}"
#        host_switch_spec:
#          resource_type: StandardHostSwitchSpec
#          host_switches: "{{ item.host_switches }}"
        node_deployment_info: "{{ item.node_deployment_info }}"
#        tags: "{{ item.tags }}"
        remote_tunnel_endpoint:
          host_switch_name:  NVDS-1
          rtep_vlan: 58
#            VlanID: 58
          ip_assignment_spec:
            resource_type: StaticIpPoolSpec
            ip_pool_id: "a9366f9e-d89e-4175-b04f-50fde15958e2"
        state: present 
      loop: "{{ var_EdgeTransportNodes }}"
      when:
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true
        - var_EdgeTransportNodes != ""
#      async: 1800
#      poll: 0




    - name: Wait 1 minute for the NSX-T API to process Edge Transport Node deployment information
      ansible.builtin.pause: minutes=1
      when: 
        - false
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true
        - var_EdgeTransportNodes != ""

    - name: Wait until the NSX-T API reports that no Edge Transport Nodes are in "PENDING" state
      ansible.builtin.uri:
        url: https://{{ Nested_NSXT.Component.LocalManager_VIP.FQDN }}/api/v1/transport-nodes/state?status=PENDING
        validate_certs: "{{ Common.PKI.ValidateCerts }}"
        timeout: 10
        force_basic_auth: yes
        url_username: "{{ Nested_NSXT.Credential.admin.Name }}"
        url_password: "{{ Nested_NSXT.Credential.admin.Password }}"
        method: GET
        body_format: json
        return_content: yes
        status_code: 200
      register: result
      until: (result.json.result_count | default(1))  == 0
      retries: 90
      delay: 60
      when: 
        - false
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true
        - var_EdgeTransportNodes != ""

    - name: Wait until the NSX-T API reports that no Edge Transport Nodes are in "IN_PROGRESS" state
      ansible.builtin.uri:
        url: https://{{ Nested_NSXT.Component.LocalManager_VIP.FQDN }}/api/v1/transport-nodes/state?status=IN_PROGRESS
        validate_certs: "{{ Common.PKI.ValidateCerts }}"
        timeout: 10
        force_basic_auth: yes
        url_username: "{{ Nested_NSXT.Credential.admin.Name }}"
        url_password: "{{ Nested_NSXT.Credential.admin.Password }}"
        method: GET
        body_format: json
        return_content: yes
        status_code: 200
      register: result
      until: (result.json.result_count | default(1)) == 0
      retries: 90
      delay: 60
      when: 
        - false
        - Deploy.Product.NSXT.LocalManager.Deploy == true
        - Deploy.Product.NSXT.Edge.Deploy == true
        - var_EdgeTransportNodes != ""

