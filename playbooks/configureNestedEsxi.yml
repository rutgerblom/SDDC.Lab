## Rutger has ownership of this file for the v2 migration ##
##
## ToDo:
##
##
---
- hosts: localhost
  name: configureNestedEsxi.yml
  gather_facts: false
  vars:
    
  vars_files:
    - ../config.yml
    - ../answerfile.yml
  tasks:
    - name: DEBUG -- Display Target Variables (Pause)
      pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ============================ Display Variables For Pod {{Pod.Number}} ===========================

                                     Ansible Playbook: {{ ansible_play_name }}

                                    Target.Deployment: {{ Target.Deployment }}

                                          Target.FQDN: {{ Target.FQDN }}
                                          Target.User: {{ Target.User }}
                                      Target.Password: {{ Target.Password }}
                                       Target.Cluster: {{ Target.Cluster }}
                                    Target.DataCenter: {{ Target.DataCenter }}
                                      Target.VMFolder: {{ Target.VMFolder }}
                                     Target.Datastore: {{ Target.Datastore }}

                                    Common.DNS.Domain: {{ Common.DNS.Domain }}
                              Common.DNS.Server1.IPv4: {{ Common.DNS.Server1.IPv4 }}
                              Common.DNS.Server2.IPv4: {{ Common.DNS.Server2.IPv4 }}

                              Common.NTP.Server1.IPv4: {{ Common.NTP.Server1.IPv4 }}
                              Common.NTP.Server2.IPv4: {{ Common.NTP.Server2.IPv4 }}

                               Common.NFS.Server.IPv4: {{ Common.NFS.Server.IPv4 }}
                                      Common.NFS.Path: {{ Common.NFS.Path  }} 
                                 Common.NFS.Datastore: {{ Common.NFS.Datastore }}
                                 Common.NFS.Datastore: {{ Common.NFS.Type }}

                                           vcenter.ip: {{ vcenter.ip }}
                                           vcenter.ip: {{ vcenter.user }}
                                           vcenter.ip: {{ vcenter.password }}
                                   vcenter.datacenter: {{ vcenter.datacenter }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true

    - name: Configure hostname on nested ESXi deployed on vCenter
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "system hostname set --fqdn={{ item.value.FQDN }}"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "vCenter" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Configure hostname within nested ESXi deployed on the ESXi Host
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "system hostname set --fqdn={{ item.value.FQDN }}"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Set VLAN on the management portgroup within nested ESXi deployed on vCenter
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network vswitch standard portgroup set --portgroup-name='Management Network' --vlan-id={{ item.value.vmk.vmk0.VLAN }}"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "vCenter" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Set VLAN on the management portgroup within nested ESXi deployed on the ESXi Host
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network vswitch standard portgroup set --portgroup-name='Management Network' --vlan-id={{ item.value.vmk.vmk0.VLAN }}"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Set IP address on vmk0 within nested ESXi deployed on vCenter
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip interface ipv4 set --interface-name=vmk0 --ipv4={{ item.value.vmk.vmk0.Address.IPv4.Address }} --netmask={{ (item.value.vmk.vmk0.Address.IPv4.Address + '/' + item.value.vmk.vmk0.Address.IPv4.Prefix) | ipaddr('netmask') }} --type=static"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "vCenter" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Set IP address on vmk0 within nested ESXi deployed on the ESXi Host
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip interface ipv4 set --interface-name=vmk0 --ipv4={{ item.value.vmk.vmk0.Address.IPv4.Address }} --netmask={{ (item.value.vmk.vmk0.Address.IPv4.Address + '/' + item.value.vmk.vmk0.Address.IPv4.Prefix) | ipaddr('netmask') }} --type=static"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Set default gateway within nested ESXi deployed on vCenter
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcfg-route
        vm_shell_args: " -a default {{ item.value.vmk.vmk0.Address.IPv4.Gateway }}"
        vm_shell_env: 
        - "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "vCenter" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Set default gateway within nested ESXi deployed on the ESXi host
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcfg-route
        vm_shell_args: " -a default {{ item.value.vmk.vmk0.Address.IPv4.Gateway }}"
        vm_shell_env: 
        - "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Set search domain within nested ESXi deployed on vCenter
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip dns search add --domain={{ Common.DNS.Domain }}"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "vCenter" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool and Deploy.UseDNS|bool

    - name: Set search domain within nested ESXi deployed on the ESXi host
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip dns search add --domain={{ Common.DNS.Domain }}"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool and Deploy.UseDNS|bool

    - name: Configure primary DNS within nested ESXi deployed on vCenter
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip dns server add --server={{ Common.DNS.Server1.IPv4 }}"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "vCenter" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool and Deploy.UseDNS|bool

    - name: Configure primary DNS within nested ESXi deployed on the ESXi host
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip dns server add --server={{ Common.DNS.Server1.IPv4 }}"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool and Deploy.UseDNS|bool

    - name: Configure secondary DNS within nested ESXi deployed on vCenter
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip dns server add --server={{ Common.DNS.Server2.IPv4 }}"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "vCenter" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool and Deploy.UseDNS|bool

    - name: Configure secondary DNS within nested ESXi deployed on the ESXi host
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "network ip dns server add --server={{ Common.DNS.Server2.IPv4 }}"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool and Deploy.UseDNS|bool

    - name: Mark vSAN cache disk as Flash disk within nested ESXi deployed on vCenter
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "storage nmp satp rule add -s VMW_SATP_LOCAL -d mpx.vmhba0:C0:T2:L0 -o enable_ssd"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "vCenter" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool and Nested_Clusters[item.value.Cluster]['vSAN']|bool

    - name: Mark vSAN cache disk as Flash disk within nested ESXi deployed on the ESXi host
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "storage nmp satp rule add -s VMW_SATP_LOCAL -d mpx.vmhba0:C0:T2:L0 -o enable_ssd"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool and Nested_Clusters[item.value.Cluster]['vSAN']|bool

    - name: Reclaim vSAN Flash disk within nested ESXi deployed on vCenter
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        cluster: "{{ Target.Cluster }}"
        datacenter: "{{ Target.DataCenter }}"
        folder: "{{ Target.VMFolder }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "storage core claiming reclaim -d mpx.vmhba0:C0:T2:L0"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "vCenter" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool and Nested_Clusters[item.value.Cluster]['vSAN']|bool

    - name: Reclaim vSAN Flash disk within nested ESXi deployed on the ESXi host
      vmware_vm_shell:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        vm_id: "{{ item.value.VMName }}"
        vm_username: "{{ item.value.User }}"
        vm_password: "{{ item.value.Password }}"
        vm_shell: /bin/esxcli
        vm_shell_args: "storage core claiming reclaim -d mpx.vmhba0:C0:T2:L0"
        vm_shell_env: "PATH=/bin"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool and Nested_Clusters[item.value.Cluster]['vSAN']|bool

    - name: Remove local datastore within nested ESXi deployed on vCenter
      vmware_host_datastore:
        hostname: "{{ Target.FQDN }}"
        username: "{{ Target.User }}"
        password: "{{ Target.Password }}"
        validate_certs: false
        datastore_name: datastore1
        esxi_hostname: "{{ item.value.FQDN }}"
        state: absent
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "vCenter" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Remove local datastore within nested ESXi deployed on the ESXi host
      vmware_host_datastore:
        hostname: "{{ item.value.FQDN }}" 
        username: "{{ item.value.User }}"
        password: "{{ item.value.Password }}"
        validate_certs: false
        datastore_name: datastore1
        state: absent
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Target.Deployment == "Host" and Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Add nested ESXi to vCenter
      vmware_host:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        datacenter_name: "{{ vcenter.datacenter }}"
        validate_certs: false
        cluster_name: "{{ item.value.Cluster }}"
        esxi_hostname: "{{ item.value.FQDN }}"
        esxi_username: "{{ item.value.User }}"
        esxi_password: "{{ item.value.Password }}"
        state: present
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      when: Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Configure NTP on nested ESXi
      vmware_host_ntp:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        validate_certs: false        
        esxi_hostname: "{{ item.value.FQDN }}"
        ntp_servers:
          - "{{ Common.NTP.Server1.IPv4 }}"
          - "{{ Common.NTP.Server2.IPv4 }}"
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Start ntpd on nested ESXi and change the service policy
      vmware_host_service_manager:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        validate_certs: false        
        esxi_hostname: "{{ item.value.FQDN }}"
        service_name: ntpd
        service_policy: on
        state: present
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Nested_Clusters[item.value.Cluster]['DeployHosts']|bool

    - name: Mount NFS datastore on nested ESXi
      vmware_host_datastore:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.FQDN }}"      
        datastore_name: "{{ Common.NFS.Datastore }}"
        datastore_type: "{{ Common.NFS.Type }}"
        nfs_server: "{{ Common.NFS.Server.IPv4 }}"
        nfs_path: "{{ Common.NFS.Path }}"
        nfs_ro: no
        state: present
      loop: "{{ Nested_ESXi.Hosts | dict2items }}"
      async: 1800
      poll: 0
      when: Nested_Clusters[item.value.Cluster]['DeployHosts']|bool and Deploy.UseNFS|bool