##
##    Project: SDDC.Lab
##    Authors: Luis Chanu & Rutger Blom
##   Filename: playbooks/configureHA.yml
##
---
- hosts: localhost
  name: configureHA.yml
  tasks:
    - name: configureHA_Playbook
      ansible.builtin.debug:
        msg: "Starting playbook: {{ ansible_play_name }}"

    - name: Display error message if Pod-XXX-Config file is not valid or provided
      ansible.builtin.pause:
        seconds: 5
        prompt: |
          *****************************************************************************************************
          ****************************************** ERROR MESSAGE ********************************************
          *****************************************************************************************************

            A valid "Pod-XXX-Config.yml" file is required in order for this playbook to run.

            Please verify:
            ==============
              1) You supplied a valid Pod-XXX-Config.yml file via the ansible-playbook -e "@Pod-XXX-Config.yml"
                 command-line option.  Here is an example of a how to load a Pod-XXX-Config.yml file that is
                 located in your home directory:
                                    ansible-playbook -e "@~/Pod-XXX-Config.yml" deploy.yml

              2) The Pod-XXX-Config.yml file provided was created using the playbooks/createPodConfig.yml script.
                 All Pod configuration files used to deploy labs MUST be generated using that script.

              3) You included the proper path with the "-e" option to the Pod-XXX-Config.yml file.

              4) You prefaced the file name in the "-e" option with a '@', as shown in the example above.

          *****************************************************************************************************
      when:
        - Valid_Pod_Config_File is not defined

    - name: Exit Ansible playbook if Pod-XXX-Config.yml file is not valid or provided
      ansible.builtin.meta: end_play
      when: Valid_Pod_Config_File is not defined


    - name: DEBUG -- Display Target Variables (Pause)
      ansible.builtin.pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ============================ Display Variables For Pod {{Pod.Number}} ===========================

                                     Ansible Playbook: {{ ansible_play_name }}

                                    Target.Deployment: {{ Target.Deployment }}

                                          Target.FQDN: {{ Target.FQDN }}
                                          Target.User: {{ Target.User }}
                                      Target.Password: {{ Target.Password }}
                                       Target.Cluster: {{ Target.Cluster }}
                                    Target.DataCenter: {{ Target.DataCenter }}
                                     Target.Datastore: {{ Target.Datastore }}
                                      Target.VMFolder: {{ Target.VMFolder }}

                                  Nested vCenter FQDN: {{ Nested_vCenter.FQDN | lower }}
                            Nested vCenter DataCenter: {{ Nested_vCenter.DataCenter }}

          =================================================================================================
      when:
        - DEBUG.DisplayVariables == true

    - name: Enable HA on each Cluster, if applicable
      community.vmware.vmware_cluster_ha:
        hostname: "{{ Nested_vCenter.FQDN | lower }}"
        username: "{{ Nested_vCenter.User }}"
        password: "{{ Nested_vCenter.Password }}"
        datacenter_name: "{{ Nested_vCenter.DataCenter }}"
        cluster_name: "{{ item.key }}"
        validate_certs: "{{ Common.PKI.ValidateCerts }}"
        enable: "{{ item.value.HA.Enable }}"
        ha_host_monitoring: "{{ item.value.HA.Host_Monitoring }}"
        ha_vm_monitoring: "{{ item.value.HA.VM_Monitoring }}"
        apd_response: "{{ item.value.HA.APD_Response }}"
        pdl_response: "{{ item.value.HA.PDL_Response }}"
        host_isolation_response: "{{ item.value.HA.Host_Isolation_Response }}"
      loop: "{{ Nested_Cluster | dict2items }}"
      when: 
        - item.value.DeployHosts == true
